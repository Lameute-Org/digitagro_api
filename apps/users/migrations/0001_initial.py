# Generated by Django 5.2.6 on 2025-09-28 15:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('adresse', models.CharField(max_length=255)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('role_choisi', models.CharField(choices=[('producteur', 'Producteur'), ('transporteur', 'Transporteur'), ('transformateur', 'Transformateur'), ('distributeur', 'Distributeur'), ('consommateur', 'Consommateur')], default='consommateur', max_length=20)),
                ('profile_completed', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='Consommateur',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('preferences', models.TextField(blank=True)),
                ('adresse_livraison', models.TextField()),
            ],
            options={
                'verbose_name': 'Consommateur',
                'verbose_name_plural': 'Consommateurs',
            },
        ),
        migrations.CreateModel(
            name='Distributeur',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('type_distribution', models.CharField(max_length=100)),
                ('zones_service', models.TextField()),
                ('licence', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Distributeur',
                'verbose_name_plural': 'Distributeurs',
            },
        ),
        migrations.CreateModel(
            name='Producteur',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('type_production', models.CharField(max_length=100)),
                ('superficie', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('certification', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Producteur',
                'verbose_name_plural': 'Producteurs',
            },
        ),
        migrations.CreateModel(
            name='Transformateur',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('type_transformation', models.CharField(max_length=100)),
                ('certification', models.CharField(blank=True, max_length=100)),
                ('capacite_traitement', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'verbose_name': 'Transformateur',
                'verbose_name_plural': 'Transformateurs',
            },
        ),
        migrations.CreateModel(
            name='Transporteur',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('type_vehicule', models.CharField(max_length=100)),
                ('capacite', models.DecimalField(decimal_places=2, max_digits=10)),
                ('permis_transport', models.CharField(max_length=50)),
                ('conditions_conservation', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Transporteur',
                'verbose_name_plural': 'Transporteurs',
            },
        ),
        migrations.CreateModel(
            name='PasswordResetRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_code', models.CharField(db_index=True, max_length=6)),
                ('reset_token', models.CharField(db_index=True, max_length=100, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('is_validated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Demande de réinitialisation',
                'verbose_name_plural': 'Demandes de réinitialisation',
            },
        ),
    ]
